on: [push]
#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release binaries

env:
  RELEASE_BIN: perf-gauge
  RELEASE_ADDS: README.md LICENSE

jobs:
  release-bin:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux, macos, windows ]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust:
              - stable
              - 1.65.0

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features full

      - name: Create artifact directory
        run: mkdir artifacts

      - name: Create archive for Linux
        run: 7z a -ttar -so -an ./target/release/${{ env.RELEASE_BIN }} ${{ env.RELEASE_ADDS }} | 7z a -si ./artifacts/${{ env.RELEASE_BIN }}-linux-x86_64.tar.gz
        if: matrix.os == 'ubuntu-latest'

      - name: Create archive for Windows
        run: 7z a -tzip ./artifacts/${{ env.RELEASE_BIN }}-windows-x86_64.zip ./target/release/${{ env.RELEASE_BIN }}.exe ${{ env.RELEASE_ADDS }}
        if: matrix.os == 'windows-latest'

      - name: Install p7zip
        # 7Zip not available on MacOS, install p7zip via homebrew.
        run: brew install p7zip
        if: matrix.os == 'macos-latest'

      - name: Create archive for MacOS
        run: 7z a -tzip ./artifacts/${{ env.RELEASE_BIN }}-mac-x86_64.zip ./target/release/${{ env.RELEASE_BIN }} ${{ env.RELEASE_ADDS }}
        if: matrix.os == 'macos-latest'

      # This will double-zip
      # See - https://github.com/actions/upload-artifact/issues/39
      - uses: actions/upload-artifact@v1
        name: Upload archive
        with:
          name: ${{ runner.os }}
          path: artifacts/
